/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.City;
import model.CommunityHistory;
import model.Community;
import model.Hospital;
import model.HospitalDirectory;
import model.Person;

/**
 *
 * @author Rishab
 */
public class HospitalPanel extends javax.swing.JPanel {

    /**
     * Creates new form HospitalPanel
     */
    CommunityHistory communityHistory;
    HospitalDirectory hospitalDirectory;
    private ArrayList<Community> cList;
    private HashSet<String> cityList;

    private ArrayList<String> communityNameList;
    private ArrayList<String> houseList;

    private HashMap<String, ArrayList<String>> map;
    private HashMap<String, ArrayList<String>> mapHouse;
    static String userRole;

    public HospitalPanel(CommunityHistory communityHistory, HospitalDirectory hospitalDirectory, String userRole) {
        this.communityHistory = communityHistory;
        this.hospitalDirectory = hospitalDirectory;
        initComponents();

        this.cList = new ArrayList<>();
        // this.personDirectory = personDirectory;
        //  this.patientDirectory = patientDirectory;

        cityList = new HashSet<>();
        communityNameList = new ArrayList<>();
        houseList = new ArrayList<>();
        map = new HashMap<>();
        mapHouse = new HashMap<>();

        cList = communityHistory.getCommunityHistory();
        for (Community community : cList) {

            cityList.add(community.getCity().getcityName());
            communityNameList.add(community.getCommunityName());
            //houseList.add(community.getHouse().getAddress());
        }

        hospitalCityCombo.addItem("Select a city");

        for (String city : cityList) {
            hospitalCityCombo.addItem(city);

        }
        this.userRole = userRole;
        setCommunityAllProperties();
        validateUserRoles();
    }
    
    
    
    public void validateUserRoles(){
        if(userRole == "Hospital Admin"){
            btnDeleteHospital.setVisible(false);
        }
    }

    private void setCommunityAllProperties() {

        for (Community community : cList) {

            ArrayList<String> communityVal = new ArrayList<>();

            if (cityList.contains(community.getCity().getcityName())) {
                if (map.get(community.getCity().getcityName()) == null) {
                    communityVal.add(community.getCommunityName());
                    map.put(community.getCity().getcityName(), communityVal);
                } else {

                    map.get(community.getCity().getcityName()).add(community.getCommunityName());

                }

            }

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        hospitalId = new javax.swing.JTextField();
        hospitalName = new javax.swing.JTextField();
        hospitalCityCombo = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        hospitalCommunityCombo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        doctorId = new javax.swing.JTextField();
        doctorName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnCreateHospital = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        hospitalTable = new javax.swing.JTable();
        jlabel = new javax.swing.JLabel();
        hospitalNameUpdate = new javax.swing.JTextField();
        jlabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        communityNameUpdate = new javax.swing.JComboBox<>();
        cityNameUpdate = new javax.swing.JComboBox<>();
        doctorNameUpdate = new javax.swing.JTextField();
        btnViewHospital = new javax.swing.JButton();
        btnDeleteHospital = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(51, 153, 255));

        jLabel1.setText("Hospital Id");

        jLabel2.setText("Hospital Name");

        jLabel3.setText("City");

        hospitalId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalIdActionPerformed(evt);
            }
        });
        hospitalId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                hospitalIdKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                hospitalIdKeyTyped(evt);
            }
        });

        hospitalName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                hospitalNameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                hospitalNameKeyTyped(evt);
            }
        });

        hospitalCityCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalCityComboActionPerformed(evt);
            }
        });

        jLabel4.setText("Community");

        hospitalCommunityCombo.setToolTipText("");

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel5.setText("                      MANAGE HOSPITAL");

        jLabel6.setText("Doctor Id");

        doctorId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                doctorIdKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                doctorIdKeyTyped(evt);
            }
        });

        doctorName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                doctorNameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                doctorNameKeyTyped(evt);
            }
        });

        jLabel7.setText("Doctor Name");

        btnCreateHospital.setText("CREATE");
        btnCreateHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateHospitalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(258, 258, 258)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addComponent(jLabel1)
                .addGap(138, 138, 138)
                .addComponent(hospitalId, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addComponent(jLabel2)
                .addGap(116, 116, 116)
                .addComponent(hospitalName, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addComponent(jLabel3)
                .addGap(176, 176, 176)
                .addComponent(hospitalCityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addComponent(jLabel4)
                .addGap(135, 135, 135)
                .addComponent(hospitalCommunityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addComponent(jLabel6)
                .addGap(146, 146, 146)
                .addComponent(doctorId, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addComponent(jLabel7)
                .addGap(124, 124, 124)
                .addComponent(doctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(427, 427, 427)
                .addComponent(btnCreateHospital))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel5)
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel1))
                    .addComponent(hospitalId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel2))
                    .addComponent(hospitalName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel3))
                    .addComponent(hospitalCityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel4))
                    .addComponent(hospitalCommunityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel6))
                    .addComponent(doctorId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel7))
                    .addComponent(doctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65)
                .addComponent(btnCreateHospital))
        );

        jTabbedPane1.addTab("CREATE", jPanel1);

        jPanel2.setBackground(new java.awt.Color(51, 153, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        hospitalTable.setAutoCreateRowSorter(true);
        hospitalTable.setBackground(new java.awt.Color(242, 242, 242));
        hospitalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Hospital Name", "Hospital Id", "City", "Community", "Doctor Name"
            }
        ));
        jScrollPane1.setViewportView(hospitalTable);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 993, 292));

        jlabel.setText("Hospital");
        jPanel2.add(jlabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(287, 400, -1, -1));
        jPanel2.add(hospitalNameUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(448, 389, 247, -1));

        jlabel2.setText("City");
        jPanel2.add(jlabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(287, 446, -1, -1));

        jLabel8.setText("Community");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(287, 500, -1, -1));

        jLabel9.setText("Doctor");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(287, 557, -1, -1));

        jPanel2.add(communityNameUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(448, 486, 247, -1));

        cityNameUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityNameUpdateActionPerformed(evt);
            }
        });
        jPanel2.add(cityNameUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(448, 430, 247, -1));
        jPanel2.add(doctorNameUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(448, 551, 247, -1));

        btnViewHospital.setText("View");
        btnViewHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewHospitalActionPerformed(evt);
            }
        });
        jPanel2.add(btnViewHospital, new org.netbeans.lib.awtextra.AbsoluteConstraints(217, 333, -1, -1));

        btnDeleteHospital.setText("Delete");
        btnDeleteHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteHospitalActionPerformed(evt);
            }
        });
        jPanel2.add(btnDeleteHospital, new org.netbeans.lib.awtextra.AbsoluteConstraints(682, 324, -1, -1));

        jButton4.setText("Update");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(474, 626, -1, -1));

        jTabbedPane1.addTab("VIEW", jPanel2);

        add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 0, 1030, 750));
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateHospitalActionPerformed
        // TODO add your handling code here:
        boolean chckId = false;
        boolean chckName= false;
        boolean chckDocId= false;
       boolean chckDocName= false;

        chckId = hospitalId.getText().isEmpty() ? true : false;
        chckName = hospitalName.getText().isEmpty() ? true : false;
         chckDocId = doctorId.getText().isEmpty() ? true : false;
         chckDocName = doctorName.getText().isEmpty() ? true : false;
       
        if ((chckId == false) && (chckName == false) && (chckDocId == false) && (chckDocName == false) ) {
            
        try{
        int docId = Integer.parseInt(doctorId.getText());
        String docName = doctorName.getText();
        String comm = hospitalCommunityCombo.getSelectedItem().toString();
        String city = hospitalCityCombo.getSelectedItem().toString();
        int hosId = Integer.parseInt(hospitalId.getText());
        String hosName = hospitalName.getText();
        Hospital em = hospitalDirectory.addNewHospital();
        em.setId(hosId);
        em.setDoctorId(docId);
        em.setDoctorName(docName);
        em.setHospitalName(hosName);
        em.setCity(new City(city));
        em.setCommunity(new Community(comm));
        JOptionPane.showMessageDialog(this, "Hospital Information Saved");
        }
         catch (Exception e) {
                System.out.println("Error" + e);
                JOptionPane.showMessageDialog(this, "Please provide correct values");
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Please provide all the values!");
        }
    }//GEN-LAST:event_btnCreateHospitalActionPerformed

    private void hospitalIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospitalIdActionPerformed

    private void hospitalCityComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalCityComboActionPerformed
        // TODO add your handling code here:
//        String selectedCity = hospitalCityCombo.getSelectedItem().toString();
//        cityUpdateAction(selectedCity, "new");

        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {

            if (hospitalCityCombo.getSelectedItem() != null) {

                if (hospitalCityCombo.getSelectedItem().equals(entry.getKey())) {
                    ArrayList<String> list = entry.getValue();
                    hospitalCommunityCombo.removeAllItems();

                    for (String community : list) {
                        //     comboCommunity.removeAllItems();
                        hospitalCommunityCombo.addItem(community);
                    }

                }

            }

        }
    }//GEN-LAST:event_hospitalCityComboActionPerformed

    private void cityNameUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityNameUpdateActionPerformed
        // TODO add your handling code here:
//        String selectedCity = hospitalCityCombo.getSelectedItem().toString();
//        cityUpdateAction(selectedCity, "update");
        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {

            if (cityNameUpdate.getSelectedItem() != null) {

                if (cityNameUpdate.getSelectedItem().equals(entry.getKey())) {
                    ArrayList<String> list = entry.getValue();
                    communityNameUpdate.removeAllItems();

                    for (String community : list) {
                        //     comboCommunity.removeAllItems();
                        communityNameUpdate.addItem(community);
                    }

                }

            }

        }
    }//GEN-LAST:event_cityNameUpdateActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
        displayHospitals();
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void btnViewHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewHospitalActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = hospitalTable.getSelectedRow(); // Get the selected row index from the table
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select the row to view");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) hospitalTable.getModel();
        Hospital selectedHospital = (Hospital) model.getValueAt(selectedRowIndex, 0);
        doctorNameUpdate.setText(selectedHospital.getDoctorName());
        hospitalNameUpdate.setText(selectedHospital.getHospitalName());
        
        cityNameUpdate.addItem("Select a city");
        
        for (String city : cityList) {
            cityNameUpdate.addItem(city);
        }
        
        setCommunityAllProperties();
        
        
        cityNameUpdate.setSelectedItem(selectedHospital.getCity().getcityName());
        communityNameUpdate.setSelectedItem(selectedHospital.getCommunity().getCommunityName());
    }//GEN-LAST:event_btnViewHospitalActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        boolean chckHospUpdate = false;
        boolean chckDocNameUpdate= false;
       

        chckHospUpdate = hospitalNameUpdate.getText().isEmpty() ? true : false;
        chckDocNameUpdate = doctorNameUpdate.getText().isEmpty() ? true : false;
       
        if ((chckHospUpdate == false) && (chckDocNameUpdate == false)) {
        int selectedRowIndex = hospitalTable.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "please select the row to Update");
            return;
        }
        try{
        DefaultTableModel model = (DefaultTableModel) hospitalTable.getModel();
        Hospital selectedHospital = (Hospital) model.getValueAt(selectedRowIndex, 0);

        String docName = doctorNameUpdate.getText();
        String comm = communityNameUpdate.getSelectedItem().toString();
        String city = cityNameUpdate.getSelectedItem().toString();
        String hosName = hospitalNameUpdate.getText();
        Hospital em = hospitalDirectory.addNewHospital();
        selectedHospital.setDoctorName(docName);
        selectedHospital.setHospitalName(hosName);
        selectedHospital.setCity(new City(city));
        selectedHospital.setCommunity(new Community(comm));
        JOptionPane.showMessageDialog(this, "Hospital Information Updated");
        doctorNameUpdate.setText("");
        hospitalNameUpdate.setText("");
        communityNameUpdate.setSelectedItem("");
        displayHospitals();
        
        }
         catch (Exception e) {
                System.out.println("Error" + e);
                JOptionPane.showMessageDialog(this, "Please provide correct values");
            }
        }
        else{
             JOptionPane.showMessageDialog(this, "Please provide values for Hospital or Doctor!");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnDeleteHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteHospitalActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = hospitalTable.getSelectedRow(); // Get the selected row index from the table
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select the row to view");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) hospitalTable.getModel();
        Hospital selectedHospital = (Hospital) model.getValueAt(selectedRowIndex, 0);
        hospitalDirectory.deleteHospital(selectedHospital);
        JOptionPane.showMessageDialog(this, "This Hospital record has been deleted");
        doctorNameUpdate.setText("");
        hospitalName.setText("");
        //personAddress.setText("");
        displayHospitals();
    }//GEN-LAST:event_btnDeleteHospitalActionPerformed

    private void hospitalIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hospitalIdKeyPressed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_hospitalIdKeyPressed

    private void hospitalNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hospitalNameKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_hospitalNameKeyPressed

    private void doctorIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_doctorIdKeyPressed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_doctorIdKeyPressed

    private void doctorNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_doctorNameKeyPressed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_doctorNameKeyPressed

    private void hospitalIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hospitalIdKeyTyped
        // TODO add your handling code here:
          char value = evt.getKeyChar();
        if((!Character.isDigit(value))){
            evt.consume();
        }
    }//GEN-LAST:event_hospitalIdKeyTyped

    private void hospitalNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hospitalNameKeyTyped
        // TODO add your handling code here:
           char value = evt.getKeyChar();
        if((!Character.isAlphabetic(value))){
            evt.consume();
        }
    }//GEN-LAST:event_hospitalNameKeyTyped

    private void doctorIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_doctorIdKeyTyped
        // TODO add your handling code here:
            char value = evt.getKeyChar();
        if((!Character.isDigit(value))){
            evt.consume();
        }
    }//GEN-LAST:event_doctorIdKeyTyped

    private void doctorNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_doctorNameKeyTyped
        // TODO add your handling code here:
          char value = evt.getKeyChar();
        if((!Character.isAlphabetic(value))){
            evt.consume();
        }
    }//GEN-LAST:event_doctorNameKeyTyped

    public void cityUpdateAction(String selectedCity, String type) {
        System.out.println("Selected City" + selectedCity);
        if (selectedCity.equals("Boston")) {
            if (type.equals("new")) {
                hospitalCommunityCombo.removeAllItems();
                hospitalCommunityCombo.addItem("Huntington Avenue");
                hospitalCommunityCombo.addItem("Brookline");
            } else {
                communityNameUpdate.removeAllItems();
                communityNameUpdate.addItem("Huntington Avenue");
                communityNameUpdate.addItem("Brookline");

            }

        }
        if (selectedCity.equals("New York")) {
            if (type.equals("new")) {
                hospitalCommunityCombo.removeAllItems();
                hospitalCommunityCombo.addItem("Times Square");
                hospitalCommunityCombo.addItem("Manhattan");

            } else {
                communityNameUpdate.removeAllItems();
                communityNameUpdate.addItem("Times Square");
                communityNameUpdate.addItem("Manhattan");

            }

        }

    }

    private void displayHospitals() {
        System.out.println("display ");
        DefaultTableModel model = (DefaultTableModel) hospitalTable.getModel();
        model.setRowCount(0);
        for (Hospital em : hospitalDirectory.getHospitalList()) {
            Object[] row = new Object[5];
            row[0] = em;
            row[1] = em.getId();
            row[2] = em.getCity().getcityName();
            row[3] = em.getCommunity().getCommunityName();
            row[4] = em.getDoctorName();
            model.addRow(row);

        }
//    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateHospital;
    private javax.swing.JButton btnDeleteHospital;
    private javax.swing.JButton btnViewHospital;
    private javax.swing.JComboBox<String> cityNameUpdate;
    private javax.swing.JComboBox<String> communityNameUpdate;
    private javax.swing.JTextField doctorId;
    private javax.swing.JTextField doctorName;
    private javax.swing.JTextField doctorNameUpdate;
    private javax.swing.JComboBox<String> hospitalCityCombo;
    private javax.swing.JComboBox<String> hospitalCommunityCombo;
    private javax.swing.JTextField hospitalId;
    private javax.swing.JTextField hospitalName;
    private javax.swing.JTextField hospitalNameUpdate;
    private javax.swing.JTable hospitalTable;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel jlabel;
    private javax.swing.JLabel jlabel2;
    // End of variables declaration//GEN-END:variables
}
