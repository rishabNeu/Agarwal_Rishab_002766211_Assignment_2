/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Person;
import model.PersonDirectory;

/**
 *
 * @author Rishab
 */
public class DoctorJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorJPanel
     */
    PersonDirectory personDirectory;
    public DoctorJPanel( PersonDirectory personDir) {
        initComponents();
        personDirectory = personDir;
        populatePatientTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatientInfo = new javax.swing.JTable();
        buttonAddVitals = new javax.swing.JButton();
        buttonEdit = new javax.swing.JButton();
        buttonRefresh = new javax.swing.JButton();
        penelVitalSigns = new javax.swing.JPanel();
        labelVitalSigns = new javax.swing.JLabel();
        labelBloodSugar = new javax.swing.JLabel();
        labelPressure = new javax.swing.JLabel();
        labelTemperature = new javax.swing.JLabel();
        labelPulse = new javax.swing.JLabel();
        textTemperature = new javax.swing.JTextField();
        textBloodSugar = new javax.swing.JTextField();
        textPressure = new javax.swing.JTextField();
        textPulse = new javax.swing.JTextField();
        lablId = new javax.swing.JLabel();
        textName = new javax.swing.JTextField();
        buttonSave = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableEncounter = new javax.swing.JTable();
        buttonView = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        tblPatientInfo.setBackground(new java.awt.Color(204, 204, 255));
        tblPatientInfo.setForeground(new java.awt.Color(102, 255, 102));
        tblPatientInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Age", "Doctor Name"
            }
        ));
        tblPatientInfo.setToolTipText("");
        jScrollPane1.setViewportView(tblPatientInfo);

        buttonAddVitals.setText("Add Vitals");
        buttonAddVitals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddVitalsActionPerformed(evt);
            }
        });

        buttonEdit.setText("Edit Vitals");
        buttonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditActionPerformed(evt);
            }
        });

        buttonRefresh.setText("Refresh");
        buttonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRefreshActionPerformed(evt);
            }
        });

        labelVitalSigns.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        labelVitalSigns.setText("Vital Signs");

        labelBloodSugar.setText("Blood Sugar");

        labelPressure.setText("Pressure");

        labelTemperature.setText("Temperature");

        labelPulse.setText("Pulse Rate");

        lablId.setText("Patient Name");

        buttonSave.setText("Save");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout penelVitalSignsLayout = new javax.swing.GroupLayout(penelVitalSigns);
        penelVitalSigns.setLayout(penelVitalSignsLayout);
        penelVitalSignsLayout.setHorizontalGroup(
            penelVitalSignsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(penelVitalSignsLayout.createSequentialGroup()
                .addGroup(penelVitalSignsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(penelVitalSignsLayout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(labelVitalSigns))
                    .addGroup(penelVitalSignsLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(penelVitalSignsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(penelVitalSignsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(labelPulse)
                                .addComponent(labelTemperature)
                                .addComponent(labelPressure)
                                .addComponent(labelBloodSugar))
                            .addGroup(penelVitalSignsLayout.createSequentialGroup()
                                .addComponent(lablId)
                                .addGap(2, 2, 2)))
                        .addGap(50, 50, 50)
                        .addGroup(penelVitalSignsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textBloodSugar, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                            .addComponent(textName)
                            .addComponent(textPressure)
                            .addComponent(textTemperature)
                            .addComponent(textPulse)))
                    .addGroup(penelVitalSignsLayout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        penelVitalSignsLayout.setVerticalGroup(
            penelVitalSignsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(penelVitalSignsLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(labelVitalSigns)
                .addGap(56, 56, 56)
                .addGroup(penelVitalSignsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lablId)
                    .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(penelVitalSignsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(penelVitalSignsLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(textBloodSugar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(penelVitalSignsLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(labelBloodSugar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(penelVitalSignsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelPressure)
                    .addComponent(textPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(penelVitalSignsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(penelVitalSignsLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(labelTemperature))
                    .addGroup(penelVitalSignsLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(textTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(penelVitalSignsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelPulse)
                    .addComponent(textPulse, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tableEncounter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Blood Sugar", "Pressure", "Temperature", "Pulse Rate", "Timestamp"
            }
        ));
        jScrollPane2.setViewportView(tableEncounter);

        buttonView.setText("View");
        buttonView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonViewActionPerformed(evt);
            }
        });

        Update.setText("Update");

        jLabel2.setText("Search");

        jLabel1.setBackground(new java.awt.Color(255, 51, 0));
        jLabel1.setFont(new java.awt.Font("American Typewriter", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("                                                     PATIENT SUMMARY");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 761, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(658, 658, 658)
                                .addComponent(buttonView, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(131, 131, 131)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(133, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(buttonAddVitals, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(96, 96, 96)
                                .addComponent(buttonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(117, 117, 117)
                                .addComponent(buttonRefresh))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 605, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(penelVitalSigns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(buttonAddVitals)
                                    .addComponent(buttonEdit)
                                    .addComponent(buttonRefresh)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(penelVitalSigns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(288, 288, 288)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonView, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2))
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(70, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAddVitalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddVitalsActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblPatientInfo.getModel();
        int selectedRowIndex = tblPatientInfo.getSelectedRow();
       // Patient selectedPatientDetails = (Patient)model.getValueAt(selectedRowIndex, 0);
      //  textName.setText(String.valueOf(selectedPatientDetails));
    }//GEN-LAST:event_buttonAddVitalsActionPerformed

    private void buttonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditActionPerformed
        // TODO add your handling code here:

        DefaultTableModel model = (DefaultTableModel) tableEncounter.getModel();
//        for (Patient pat : patientList){
//            // if(patientID==pat.getPatientID()){
//                ArrayList<Encounter> pa;
//                pa = pat.getEncounterHistory();
//                for (Encounter et : pa){
//                    textName.setText(String.valueOf(pat.getName()));
//                    textBloodSugar.setText(String.valueOf(et.getBloodSugar()));
//                    textPressure.setText(String.valueOf(et.getPressure()));
//                    textTemperature.setText(String.valueOf(et.getTemperature()));
//                    textPulse.setText(String.valueOf(et.getPulseRate()));
//                }
//            }
    }//GEN-LAST:event_buttonEditActionPerformed

    private void buttonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRefreshActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPatientInfo.getSelectedRow();
        //    if (selectedRowIndex <0){
            DefaultTableModel model = (DefaultTableModel) tblPatientInfo.getModel();
            int selectedPatientID = (int) model.getValueAt(selectedRowIndex, 1);
            //populateEncounterTable(selectedPatientID);
    }//GEN-LAST:event_buttonRefreshActionPerformed

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        // TODO add your handling code here:

        boolean chckBloodSugar = false;
        boolean chckPressure =false;
        boolean chckTemperature = false;
        boolean chckPulseRate = false;

        chckBloodSugar = textBloodSugar.getText().isEmpty() ? true : false;
        chckPressure = textPressure.getText().isEmpty() ? true : false;
        chckTemperature = textTemperature.getText().isEmpty()? true : false;
        chckPulseRate = textPulse.getText().isEmpty()? true : false;

        if((chckBloodSugar == false)&&(chckPressure == false)&&(chckTemperature == false)&&(chckPulseRate == false)){
            DefaultTableModel model = (DefaultTableModel) tblPatientInfo.getModel();
            int selectedRowIndex = tblPatientInfo.getSelectedRow();
            if (selectedRowIndex <0){
                JOptionPane.showMessageDialog(this, "Please Select a row to add as a Patient");
                return;
            }

            try{
               // Patient selectedPatientDetails = (Patient)model.getValueAt(selectedRowIndex, 0);
                //  txtPatientIDPatientInformation.setText(String.valueOf(selectedPatientDetails));
             //   Encounter e = selectedPatientDetails.addNewEncounterDetails();
               // e.setBloodSugar(textBloodSugar.getText());
               // e.setPressure(textPressure.getText());
              //  e.setTemperature(textTemperature.getText());
               // e.setPulseRate(Integer.parseInt(textPulse.getText()));
                //e.setAbnormal(radioButtonYes.isSelected());

              //  DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
              //  LocalDateTime now = LocalDateTime.now();
               // e.setUpdateTime(dtf.format(now));

                int selectedPatientID = (int) model.getValueAt(selectedRowIndex, 1);
                //populateEncounterTable(selectedPatientID);
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "Please provide correct values");
            }
        }

    }//GEN-LAST:event_buttonSaveActionPerformed

    private void buttonViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonViewActionPerformed
        // TODO add your handling code here:

        int selectedrowIndex=tblPatientInfo.getSelectedRow();

        if(selectedrowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to view");
            return;
        }

        DefaultTableModel model=(DefaultTableModel)tblPatientInfo.getModel();
      //  Patient selectedempDet=(Patient) model.getValueAt(selectedrowIndex, 0);

        //textName.setText(selectedempDet.getName());
        //textContact.setText(selectedempDet.getContact().toString());
        //textEmail.setText(selectedempDet.getEmail());
        //textGender.setText(selectedempDet.getGender());
        //textLevel.setText(selectedempDet.getLevel());
    }//GEN-LAST:event_buttonViewActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Update;
    private javax.swing.JButton buttonAddVitals;
    private javax.swing.JButton buttonEdit;
    private javax.swing.JButton buttonRefresh;
    private javax.swing.JButton buttonSave;
    private javax.swing.JButton buttonView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel labelBloodSugar;
    private javax.swing.JLabel labelPressure;
    private javax.swing.JLabel labelPulse;
    private javax.swing.JLabel labelTemperature;
    private javax.swing.JLabel labelVitalSigns;
    private javax.swing.JLabel lablId;
    private javax.swing.JPanel penelVitalSigns;
    private javax.swing.JTable tableEncounter;
    private javax.swing.JTable tblPatientInfo;
    private javax.swing.JTextField textBloodSugar;
    private javax.swing.JTextField textName;
    private javax.swing.JTextField textPressure;
    private javax.swing.JTextField textPulse;
    private javax.swing.JTextField textTemperature;
    // End of variables declaration//GEN-END:variables

    private void populatePatientTable() {
        DefaultTableModel model = (DefaultTableModel) tblPatientInfo.getModel();
       model.setRowCount(0);
       
       for (Person pa : personDirectory.getPersonDetails()){
           Object[] row = new Object[7];
           row[0] = pa;
           row[1] = pa.getName();
           row[2] = pa.getAge();
          // row[3] = pa.getAge(); //add Community here
          // row[4] = pa.getCommunity();
           //row[6] = pa.getDoctorName();
           model.addRow(row);
           
       }

    }
}
